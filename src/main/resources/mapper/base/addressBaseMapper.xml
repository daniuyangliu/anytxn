<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linktree.sikehome.mapper.base.addressBaseMapper">


    <insert id="insertaddress"  useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `address`
        (
        <trim suffixOverrides=",">
                    <if test="id!=null">
                        `id`,
                    </if>
                    <if test="code!=null">
                        `code`,
                    </if>
                    <if test="name!=null">
                        `name`,
                    </if>
                    <if test="pid!=null">
                        `pid`,
                    </if>
                    <if test="type!=null">
                        `type`,
                    </if>
                    <if test="lit!=null">
                        `lit`,
                    </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
                <if test="id!=null">
                    #{id},
                </if>
                <if test="code!=null">
                    #{code},
                </if>
                <if test="name!=null">
                    #{name},
                </if>
                <if test="pid!=null">
                    #{pid},
                </if>
                <if test="type!=null">
                    #{type},
                </if>
                <if test="lit!=null">
                    #{lit},
                </if>
        </trim>
        )
    </insert>




    <update id="updateaddress">
        UPDATE `address`
        SET
        <trim suffixOverrides=",">
            <if test="code != null and code!=''">
                `code` = #{code},
            </if>
            <if test="name != null and name!=''">
                `name` = #{name},
            </if>
            <if test="pid != null and pid!=''">
                `pid` = #{pid},
            </if>
            <if test="type != null">
                `type` = #{type},
            </if>
            <if test="lit != null">
                `lit` = #{lit},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
                `id` = #{id} and
        </trim>
    </update>

    <update id="update">
        UPDATE `address`
        SET
        <trim suffixOverrides=",">
        <if test="set.code != null and set.code!=''">
            `code` = #{set.code},
        </if>
        <if test="set.name != null and set.name!=''">
            `name` = #{set.name},
        </if>
        <if test="set.pid != null and set.pid!=''">
            `pid` = #{set.pid},
        </if>
        <if test="set.type != null">
            `type` = #{set.type},
        </if>
        <if test="set.lit != null">
            `lit` = #{set.lit},
        </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
                <if test="where.idList != null">
                    `id` in
                    <foreach collection="where.idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.idSt !=null">
                `id` >= #{where.idSt} and
            </if>
            <if test="where.idEd!=null">
                `id` &lt;= #{where.idEd} and
            </if>
                <if test="where.codeList != null">
                    `code` in
                    <foreach collection="where.codeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyCode!=null and where.fuzzyCode.size()>0">
                (
                <foreach collection="where.fuzzyCode"  separator="or" item="item">
                    `Code` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyCode!=null and where.rightFuzzyCode.size()>0">
                (
                <foreach collection="where.rightFuzzyCode"  separator="or" item="item">
                    `Code` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.nameList != null">
                    `name` in
                    <foreach collection="where.nameList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyName!=null and where.fuzzyName.size()>0">
                (
                <foreach collection="where.fuzzyName"  separator="or" item="item">
                    `Name` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyName!=null and where.rightFuzzyName.size()>0">
                (
                <foreach collection="where.rightFuzzyName"  separator="or" item="item">
                    `Name` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.pidList != null">
                    `pid` in
                    <foreach collection="where.pidList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyPid!=null and where.fuzzyPid.size()>0">
                (
                <foreach collection="where.fuzzyPid"  separator="or" item="item">
                    `Pid` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyPid!=null and where.rightFuzzyPid.size()>0">
                (
                <foreach collection="where.rightFuzzyPid"  separator="or" item="item">
                    `Pid` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.typeList != null">
                    `type` in
                    <foreach collection="where.typeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.typeSt !=null">
                `type` >= #{where.typeSt} and
            </if>
            <if test="where.typeEd!=null">
                `type` &lt;= #{where.typeEd} and
            </if>
                <if test="where.litList != null">
                    `lit` in
                    <foreach collection="where.litList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.litSt !=null">
                `lit` >= #{where.litSt} and
            </if>
            <if test="where.litEd!=null">
                `lit` &lt;= #{where.litEd} and
            </if>
        </trim>
    </update>


    <resultMap type="com.linktree.sikehome.entity.address" id="addressMap">
        <result property="id" column="id"/>
        <result property="code" column="code"/>
        <result property="name" column="name"/>
        <result property="pid" column="pid"/>
        <result property="type" column="type"/>
        <result property="lit" column="lit"/>
    </resultMap>


    <select id="queryaddress" resultMap="addressMap">
        select
        <include refid="baseResult"></include>
        from  `address`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="code != null and code!=''">
                `code` = #{code} and
            </if>
            <if test="name != null and name!=''">
                `name` = #{name} and
            </if>
            <if test="pid != null and pid!=''">
                `pid` = #{pid} and
            </if>
            <if test="type != null">
                `type` = #{type} and
            </if>
            <if test="lit != null">
                `lit` = #{lit} and
            </if>
            <if test = "(_parameter instanceof com.linktree.sikehome.entity.address$QueryBuilder) == true">
                <if test="idList != null">
                    `id` in
                    <foreach collection="idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                <if test="codeList != null">
                    `code` in
                    <foreach collection="codeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyCode!=null and fuzzyCode.size()>0">
                    (
                    <foreach collection="fuzzyCode"  separator="or" item="item">
                        `Code` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyCode!=null and rightFuzzyCode.size()>0">
                    (
                    <foreach collection="rightFuzzyCode"  separator="or" item="item">
                        `Code` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="nameList != null">
                    `name` in
                    <foreach collection="nameList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyName!=null and fuzzyName.size()>0">
                    (
                    <foreach collection="fuzzyName"  separator="or" item="item">
                        `Name` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyName!=null and rightFuzzyName.size()>0">
                    (
                    <foreach collection="rightFuzzyName"  separator="or" item="item">
                        `Name` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="pidList != null">
                    `pid` in
                    <foreach collection="pidList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyPid!=null and fuzzyPid.size()>0">
                    (
                    <foreach collection="fuzzyPid"  separator="or" item="item">
                        `Pid` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyPid!=null and rightFuzzyPid.size()>0">
                    (
                    <foreach collection="rightFuzzyPid"  separator="or" item="item">
                        `Pid` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="typeList != null">
                    `type` in
                    <foreach collection="typeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="typeSt !=null">
                    `type` >= #{typeSt} and
                </if>
                <if test="typeEd!=null">
                    `type` &lt;= #{typeEd} and
                </if>
                <if test="litList != null">
                    `lit` in
                    <foreach collection="litList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="litSt !=null">
                    `lit` >= #{litSt} and
                </if>
                <if test="litEd!=null">
                    `lit` &lt;= #{litEd} and
                </if>
            </if>
        </trim>
    </select>

    <select id="queryaddressLimit1" resultMap="addressMap">
        select
        <include refid="baseResult"></include>
        from  `address`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="code != null and code!=''">
                `code` = #{code} and
            </if>
            <if test="name != null and name!=''">
                `name` = #{name} and
            </if>
            <if test="pid != null and pid!=''">
                `pid` = #{pid} and
            </if>
            <if test="type != null">
                `type` = #{type} and
            </if>
            <if test="lit != null">
                `lit` = #{lit} and
            </if>
            <if test = "(_parameter instanceof com.linktree.sikehome.entity.address$QueryBuilder) == true">
                    <if test="idList != null">
                        `id` in
                        <foreach collection="idList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                    <if test="codeList != null">
                        `code` in
                        <foreach collection="codeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyCode!=null and fuzzyCode.size()>0">
                    (
                    <foreach collection="fuzzyCode"  separator="or" item="item">
                        `Code` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyCode!=null and rightFuzzyCode.size()>0">
                    (
                    <foreach collection="rightFuzzyCode"  separator="or" item="item">
                        `Code` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="nameList != null">
                        `name` in
                        <foreach collection="nameList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyName!=null and fuzzyName.size()>0">
                    (
                    <foreach collection="fuzzyName"  separator="or" item="item">
                        `Name` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyName!=null and rightFuzzyName.size()>0">
                    (
                    <foreach collection="rightFuzzyName"  separator="or" item="item">
                        `Name` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="pidList != null">
                        `pid` in
                        <foreach collection="pidList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyPid!=null and fuzzyPid.size()>0">
                    (
                    <foreach collection="fuzzyPid"  separator="or" item="item">
                        `Pid` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyPid!=null and rightFuzzyPid.size()>0">
                    (
                    <foreach collection="rightFuzzyPid"  separator="or" item="item">
                        `Pid` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="typeList != null">
                        `type` in
                        <foreach collection="typeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="typeSt !=null">
                    `type` >= #{typeSt} and
                </if>
                <if test="typeEd!=null">
                    `type` &lt;= #{typeEd} and
                </if>
                    <if test="litList != null">
                        `lit` in
                        <foreach collection="litList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="litSt !=null">
                    `lit` >= #{litSt} and
                </if>
                <if test="litEd!=null">
                    `lit` &lt;= #{litEd} and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
        `id`,
        `code`,
        `name`,
        `pid`,
        `type`,
        `lit`,
        </trim>
    </sql>



    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof com.linktree.sikehome.entity.address$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                    <if test="fetchFields.fetchFields.id==true">
                        `id`,
                    </if>
                    <if test="fetchFields.fetchFields.code==true">
                        `code`,
                    </if>
                    <if test="fetchFields.fetchFields.name==true">
                        `name`,
                    </if>
                    <if test="fetchFields.fetchFields.pid==true">
                        `pid`,
                    </if>
                    <if test="fetchFields.fetchFields.type==true">
                        `type`,
                    </if>
                    <if test="fetchFields.fetchFields.lit==true">
                        `lit`,
                    </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                    <if test="fetchFields.excludeFields.id==null">
                        `id`,
                    </if>
                    <if test="fetchFields.excludeFields.code==null">
                        `code`,
                    </if>
                    <if test="fetchFields.excludeFields.name==null">
                        `name`,
                    </if>
                    <if test="fetchFields.excludeFields.pid==null">
                        `pid`,
                    </if>
                    <if test="fetchFields.excludeFields.type==null">
                        `type`,
                    </if>
                    <if test="fetchFields.excludeFields.lit==null">
                        `lit`,
                    </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                        `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof com.linktree.sikehome.entity.address$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>


</mapper>